{"ast":null,"code":"var _jsxFileName = \"/home/jorge/Desktop/react/test/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ClicksHistory = _ref => {\n  let {\n    clicks\n  } = _ref;\n  if (clicks.length === 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Press the buttons to start the application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: clicks.join(\"-\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = ClicksHistory;\nconst Button = _ref2 => {\n  let {\n    eventHandler,\n    text\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: eventHandler,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c2 = Button;\nfunction App() {\n  _s();\n  // stateful component\n  const [counterLeft, setCounterLeft] = useState(0);\n  const [counterRight, setCounterRight] = useState(0);\n  const [clicks, setClicks] = useState([]);\n  const handleLeftClick = () => {\n    setCounterLeft(counterLeft + 1);\n    setClicks(clicks.concat(\"L\"));\n  };\n  const handleRightClick = () => {\n    setCounterRight(counterRight + 1);\n    setClicks(clicks.concat(\"R\"));\n  };\n  const printException = name => {\n    return () => {\n      console.log(`Hello ${name}. Normally we use function references in event handlers and function calls are not allowed in event handlers, the only exeption is when the event handler returns a function. This can be helpful because we can pass arguments to the event handler`);\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [counterLeft, /*#__PURE__*/_jsxDEV(Button, {\n      eventHandler: handleLeftClick,\n      text: \"Increase Left\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      eventHandler: handleRightClick,\n      text: \"Increase Right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), counterRight, /*#__PURE__*/_jsxDEV(ClicksHistory, {\n      clicks: clicks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      eventHandler: printException(\"Jorge\"),\n      text: \"Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"Go948cLdhyudpGak9JtvNWwziNg=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ClicksHistory\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["useState","ClicksHistory","clicks","length","join","Button","eventHandler","text","App","counterLeft","setCounterLeft","counterRight","setCounterRight","setClicks","handleLeftClick","concat","handleRightClick","printException","name","console","log"],"sources":["/home/jorge/Desktop/react/test/src/App.js"],"sourcesContent":["import { useState } from 'react';\n\n\nconst ClicksHistory = ({clicks}) => {\n  if (clicks.length === 0) {\n    return (\n    <>\n      <h1>Press the buttons to start the application</h1>\n    </>\n    )\n  }\n  \n  return (\n    <>\n      <h1>{clicks.join(\"-\")}</h1>\n    </>\n  )\n}\n\nconst Button = ({eventHandler, text}) => {\n  return (\n    <>\n      <button onClick={eventHandler}>{text}</button>\n    </>\n  )\n}\n\nfunction App() {\n  // stateful component\n  const [counterLeft, setCounterLeft] = useState(0);\n  const [counterRight, setCounterRight] = useState(0);\n  const [clicks, setClicks] = useState([]);\n\n  const handleLeftClick = () => {\n    setCounterLeft(counterLeft  + 1);\n    setClicks(clicks.concat(\"L\"));\n  }\n\n  const handleRightClick = () => {\n    setCounterRight(counterRight + 1);\n    setClicks(clicks.concat(\"R\"))\n  }\n\n  const printException = (name) => {\n    return () => {\n      console.log(`Hello ${name}. Normally we use function references in event handlers and function calls are not allowed in event handlers, the only exeption is when the event handler returns a function. This can be helpful because we can pass arguments to the event handler`)\n    }\n  }\n\n  return (\n    <>\n      {counterLeft}\n      <Button eventHandler={handleLeftClick} text=\"Increase Left\"/>\n      <Button eventHandler={handleRightClick} text=\"Increase Right\"/>\n      {counterRight}\n      <ClicksHistory clicks={clicks}/>\n      <br />\n      <Button eventHandler={printException(\"Jorge\")} text=\"Click me\"/>\n\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAGjC,MAAMC,aAAa,GAAG,QAAc;EAAA,IAAb;IAACC;EAAM,CAAC;EAC7B,IAAIA,MAAM,CAACC,MAAM,KAAK,CAAC,EAAE;IACvB,oBACA;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAmD,iBAClD;EAEL;EAEA,oBACE;IAAA,uBACE;MAAA,UAAKD,MAAM,CAACE,IAAI,CAAC,GAAG;IAAC;MAAA;MAAA;MAAA;IAAA;EAAM,iBAC1B;AAEP,CAAC;AAAA,KAdKH,aAAa;AAgBnB,MAAMI,MAAM,GAAG,SAA0B;EAAA,IAAzB;IAACC,YAAY;IAAEC;EAAI,CAAC;EAClC,oBACE;IAAA,uBACE;MAAQ,OAAO,EAAED,YAAa;MAAA,UAAEC;IAAI;MAAA;MAAA;MAAA;IAAA;EAAU,iBAC7C;AAEP,CAAC;AAAA,MANKF,MAAM;AAQZ,SAASG,GAAG,GAAG;EAAA;EACb;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACE,MAAM,EAAEW,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMc,eAAe,GAAG,MAAM;IAC5BJ,cAAc,CAACD,WAAW,GAAI,CAAC,CAAC;IAChCI,SAAS,CAACX,MAAM,CAACa,MAAM,CAAC,GAAG,CAAC,CAAC;EAC/B,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAM;IAC7BJ,eAAe,CAACD,YAAY,GAAG,CAAC,CAAC;IACjCE,SAAS,CAACX,MAAM,CAACa,MAAM,CAAC,GAAG,CAAC,CAAC;EAC/B,CAAC;EAED,MAAME,cAAc,GAAIC,IAAI,IAAK;IAC/B,OAAO,MAAM;MACXC,OAAO,CAACC,GAAG,CAAE,SAAQF,IAAK,sPAAqP,CAAC;IAClR,CAAC;EACH,CAAC;EAED,oBACE;IAAA,WACGT,WAAW,eACZ,QAAC,MAAM;MAAC,YAAY,EAAEK,eAAgB;MAAC,IAAI,EAAC;IAAe;MAAA;MAAA;MAAA;IAAA,QAAE,eAC7D,QAAC,MAAM;MAAC,YAAY,EAAEE,gBAAiB;MAAC,IAAI,EAAC;IAAgB;MAAA;MAAA;MAAA;IAAA,QAAE,EAC9DL,YAAY,eACb,QAAC,aAAa;MAAC,MAAM,EAAET;IAAO;MAAA;MAAA;MAAA;IAAA,QAAE,eAChC;MAAA;MAAA;MAAA;IAAA,QAAM,eACN,QAAC,MAAM;MAAC,YAAY,EAAEe,cAAc,CAAC,OAAO,CAAE;MAAC,IAAI,EAAC;IAAU;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA,gBAE/D;AAEP;AAAC,GAlCQT,GAAG;AAAA,MAAHA,GAAG;AAoCZ,eAAeA,GAAG;AAAC;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}