{"ast":null,"code":"var _jsxFileName = \"/home/jorge/Desktop/react/test/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [counter, setCounter] = useState(0);\n\n  // update counter every second \n  setTimeout(() => {\n    setCounter(counter + 1);\n  }, 1000);\n  const reset = () => {\n    setCounter(0);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Counter: \", counter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: reset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"mgO7WMHyhiBnLtH7uw/qAj2Cy9A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","App","counter","setCounter","setTimeout","reset"],"sources":["/home/jorge/Desktop/react/test/src/App.js"],"sourcesContent":["import { useState } from 'react';\n\n\nfunction App() {\n  const [counter, setCounter] = useState(0);\n\n  // update counter every second \n  setTimeout(() => {\n    setCounter(counter + 1);\n  }, 1000);\n\n  const reset = () => {\n    setCounter(0);\n  }\n\n  return (\n    <>\n      <p>Counter: {counter}</p>\n      <button onClick={reset}>Reset</button>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAGjC,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGH,QAAQ,CAAC,CAAC,CAAC;;EAEzC;EACAI,UAAU,CAAC,MAAM;IACfD,UAAU,CAACD,OAAO,GAAG,CAAC,CAAC;EACzB,CAAC,EAAE,IAAI,CAAC;EAER,MAAMG,KAAK,GAAG,MAAM;IAClBF,UAAU,CAAC,CAAC,CAAC;EACf,CAAC;EAED,oBACE;IAAA,wBACE;MAAA,wBAAaD,OAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eACzB;MAAQ,OAAO,EAAEG,KAAM;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAe;EAAA,gBACrC;AAEP;AAAC,GAlBQJ,GAAG;AAAA,KAAHA,GAAG;AAoBZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}